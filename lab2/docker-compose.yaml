services:
  db:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: always
    env_file:
      - ../.env
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-p", "5432", "-U", "${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - backend

  minio:
    image: quay.io/minio/minio
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_STORAGE_USE_HTTPS=false
    env_file:
      - ../.env
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data
    healthcheck:
      test: ["CMD", "mc ready local"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - backend
  
  minio-setup:
    container_name: minio-setup
    build:
      context: ./minio
    env_file:
      - ../.env
    volumes:
      - ./minio/data:/data
    depends_on:
      - minio
    networks:
      - backend

  aichem-chat:
    build:
      dockerfile: lab1/good.Dockerfile
      context: ..
    container_name: aichem-chat
    platform: linux/amd64
    volumes:
      - ../src:/app/src
    ports:
      - 8000:8000
    env_file:
      - ../.env
      - ../secrets.env
    healthcheck:
      test: ["CMD", "python healthcheck.py"]
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      - db
      - minio
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_LISTEN_PORT=5555
    env_file:
      - ../.env
    ports:
      - 5555:5555
    networks:
      - backend
    depends_on:
      - db

networks:
  backend:

volumes:
  pg_data:
  data: